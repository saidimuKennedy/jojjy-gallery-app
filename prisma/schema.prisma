generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Series {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  slug        String   @unique
  description String   @db.Text
  artworks    Artwork[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("series")
}

model Artwork {
  id          Int      @id @default(autoincrement())
  title       String
  artist      String
  category    String
  price       Decimal  @db.Decimal(10, 2)
  imageUrl    String   @db.Text
  description String?  @db.Text
  dimensions  String?
  isAvailable Boolean? @default(true)
  views       Int      @default(0)
  likes       Int      @default(0)
  medium      String
  year        Int

  seriesId    Int?
  series      Series?  @relation(fields: [seriesId], references: [id], onDelete: SetNull)
  inGallery   Boolean  @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("artworks")
}

model Transaction {
  id          String   @id @default(uuid())
  artworkIds  String?
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  status      String
  amount      Decimal  @db.Decimal(10, 2)
  phoneNumber String
  timestamp   DateTime @default(now())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


  @@map("transactions")
}

model User {
  id           String        @id @default(uuid())
  username     String        @unique
  email        String        @unique
  passwordHash String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  sessions     Session[]
  Transaction  Transaction[]

  @@map("users")
}

model Session {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  expiresAt DateTime
  data      Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("sessions")
}